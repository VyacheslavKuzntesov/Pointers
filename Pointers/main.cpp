//Указатели
/*
	
	Довольно часто место самого значения в памяти нужно узнать адрес этого значения провести операции с адресом такая необходимость может возникать при работе с массивами и другими структурами данных при передачи параметров в функцию а иногда просто для удобства.
	Для работы с адресами в языке С++ есть указатели.
	Указатель(Pointer) - это переменная которая содержит адрес другой переменной.
	Адрес - это число, длиной 4 Байта, означающее порядковый номер Байта в оперативной памяти.
	Для процессора(CPU) память(RAM/ОЗУ) предстовляет собой массив Байтов.
	У каждого элемента массива есть номер(index), этот номер и является адресом Байта в оперативной памяти.
	Адреса всегда записывают в 16 системе(Hexadecimal)(Байт можно представить двухразрядным 16 числом).

	----------------------------------------------------------------------------------------------------------------------------------------
	
	Объявление указателей
	int a = 2;
	int* pa = &a;

	----------------------------------------------------------------------------------------------------------------------------------------
	
	Для того что бы понимать указатели достаточно понимать два оператора

	----------------------------------------------------------------------------------------------------------------------------------------
	
	& - Addres-of operator(Оператор взятия адреса).
	Это унарный оператор который возвращает адрес своего операнда.
	У этого оператора есть лишь префиксная форма записи

	* - Dereference operator (Оператор разыменования).
	Это унарный оператор который возвращает значение по адресу.
	Лишь при объявления указателя * показывает что переменная указатель но во всех остальных случаях * разыменовывает указатель и открывает доступ к тому значению которое расположенно по нужному адресу

	
	----------------------------------------------------------------------------------------------------------------------------------------

	----------------------------------------------------------------------------------------------------------------------------------------
*/

#include<iostream>
using namespace std;

//#define POINTERS_BASICS
#define POINTERS_ARRAYS

void main()
{
	setlocale(LC_ALL, "");

#ifdef POINTER_BASICS
	int a = 2;
	int* pa = &a;
	cout << a << endl;		//Вывод значение переменной 'а' на экран
	cout << &a << endl;		//Взятие адреса переменной 'a' прямо при выводе
	cout << pa << endl;		//Вывод адреса переменной 'а' хранящегося в указателе 'pa'
	cout << *pa << endl;	//	

	int* pb;				//Объявляем указатель 'pb' не зная что мы в него положим
	//...
	int b = 3;
	pb = &b;
	cout << b << endl;
	cout << pb << endl;
	cout << *pb << endl;
#endif // POINTER_BASICS

	//Указатели и массивы
	/*
		имя массива является указателем на массив по скольку содержит адрес нулевого элемента массива последовательно и всего массива

	*/
	const int n = 5;
	int arr[n] = { 3,5,8,13,21 };
	cout << arr << endl;
	cout << *arr << endl;
	for (int i = 0; i < n; i++)
	{
		cout << *(arr + i) << "\t";
	}
	cout << endl;

	//Арефметика указателей
	/*
		Над указателями можно выполнять арефметические операции
		+
		-
		++
		--
		Исход каждой операции зависит от того на какой тип указывает указатель
		Если к указатели на char прибавить 1 то адрес изменится на 1 байт
		int 4 байта
	*/

	//Передача параметров в функцию
	/*
		
	*/
}